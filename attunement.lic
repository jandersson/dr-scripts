=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#attunement
=end

custom_require.call(%w[common common-arcana common-travel drinfomon])

class Attunement
  include DRC
  include DRCA
  include DRCT

  def initialize
    settings = get_settings
    @stationary_skills_only = settings.crossing_training_stationary_skills_only
    @hometown = settings.hometown
    @attunement_rooms = settings.attunement_rooms
    cast_spells(settings.waggle_sets['attunement'], settings)
    train_attunement
  end

  def train_attunement
    command = (DRStats.moon_mage? || DRStats.trader?) ? 'perc mana' : 'perc'

    room_list = if @stationary_skills_only || DRStats.moon_mage? || DRStats.trader?
                  [Room.current.id]
                elsif !@attunement_rooms.nil? && !@attunement_rooms.empty?
                  # TODO: Nil check isn't necessary after everyone has restarted dependency
                  @attunement_rooms
                else
                  get_data('town')[@hometown]['attunement_rooms']
                end

    start_timer = Time.now
    room_list.each do |room_id|
      walk_to(room_id)
      bput(command, 'You reach out')
      waitrt?
      break if DRSkill.getxp('Attunement') >= 30 || start_timer - Time.now > 90
    end
  end
end

# Call this last to avoid the need for forward declarations
Attunement.new
