# quiet
=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#heal-remedy
=end

custom_require.call(%w[common common-healing common-items])

arg_definitions = [
  [
    { name: 'debug', regex: /debug/i, optional: true }
  ]
]

args = parse_args(arg_definitions)
$debug_mode_hr = args.debug

$remedies = get_data('remedies')

def wounds
  wounds = DRCH.check_health['wounds']
  pause 1
  echo wounds if $debug_mode_hr
  hurt = wounds.select { |level, _| level >= 4 }.values.flatten
  wound_grouping = { 'right arm' => 'limbs', 'left arm' => 'limbs', 'left leg' => 'limbs', 'right leg' => 'limbs', 'right hand' => 'limbs', 'left hand' => 'limbs', 'right eye' => 'eyes', 'left eye' => 'eyes' }
  scar_grouping = { 'right arm' => 'limbs', 'left arm' => 'limbs', 'left leg' => 'limbs', 'right leg' => 'limbs', 'right hand' => 'limbs', 'left hand' => 'limbs', 'head' => 'face', 'neck' => 'face', 'eyes' => 'face', 'chest' => 'body', 'abdomen' => 'body', 'back' => 'body' }
  hurt = hurt.map { |raw| wound_grouping[raw] || raw }.uniq
  scar = hurt.map { |raw| scar_grouping[raw] || raw }.uniq
  if $debug_mode_hr
    echo 'Wounds: '
    hurt.each do |key|
      echo key
    end

    echo

    echo 'Scars: '
    scar.each do |key|
      echo key
    end
  end
  hurt.each do |key|
    echo key if $debug_mode_hr
    echo('In hurt loop') if $debug_mode_hr
    apply_wounds(key)
  end
  pause 180 # pause 3 minutes before using scar remedies
  scar.each do |key|
    echo key if $debug_mode_hr
    echo('In scar loop') if $debug_mode_hr
    apply_scars(key)
  end
end

def apply_wounds(key)
  echo("In apply_wounds function and key is #{key}") if $debug_mode_hr
  rem_wounds = $remedies['remedies']['external'][key]
  echo(rem_wounds) if $debug_mode_hr
  rem_wounds.each do |key|
    loop_debug
    if DRCI.exists?(key)
      DRC.bput("get #{key}", 'You get')
      case key
      when /salve/, /ungent/, /poultices/, /ointment/
        DRC.bput("rub #{key}", 'You')
      when /potion/, /tonic/, /elixir/, /draught/
        DRC.bput("drink #{key}", 'You')
      end
      DRC.bput("stow #{key}", 'You')
    else
      echo("*** No more #{key}! ***")
    end
  end
end

def apply_scars(key)
  echo("In apply_scar function and key is #{key}") if $debug_mode_hr
  rem_scars = $remedies['remedies']['scars'][key]
  echo(rem_scars) if $debug_mode_hr
  rem_scars.each do |key|
    loop_debug
    if DRCI.exists?(key)
      DRC.bput("get #{key}", 'You get')
      case key
      when /salve/, /ungent/, /poultices/, /ointment/
        DRC.bput("rub #{key}", 'You')
      when /potion/, /tonic/, /elixir/, /draught/
        DRC.bput("drink #{key}", 'You')
      end
      DRC.bput("stow #{key}", 'You')
    else
      echo("*** No more #{key}! ***")
      DRC.bput('Trying general scar remedies.')
      apply_general_scar('general')
    end
  end
end

def apply_general_scar(key)
  echo("In apply_gerneral_scar function and key is #{key}") if $debug_mode_hr
  rem_scars_general = $remedies['remedies']['scars'][key]
  echo(rem_scars_general) if $debug_mode_hr
  rem_scars.each do |key|
    loop_debug
    if DRCI.exists?(key)
      DRC.bput("get #{key}", 'You get')
      case key
      when /salve/, /ungent/, /poultices/, /ointment/
        DRC.bput("rub #{key}", 'You')
      when /potion/, /tonic/, /elixir/, /draught/
        DRC.bput("drink #{key}", 'You')
      end
      DRC.bput("stow #{key}", 'You')
    else
      echo("*** No more #{key}! ***")
    end
  end
end

def loop_debug
  echo('In apply loop') if $debug_mode_hr
end
wounds
