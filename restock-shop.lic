=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#restock-shop
=end

custom_require.call(%w[common common-crafting common-items common-money common-travel])

class ShopRestock
  include DRC
  include DRCC
  include DRCI
  include DRCM
  include DRCT

  def initialize
    ensure_copper_on_hand(40_000, get_settings.hometown)

    @shop_id = 7943
    @inner_id = 9099

    @item_list = [
      ['mask', 60_000, 2, 'in cabinet', 4, 'quilted cloth mask', 1, 1, 'heavy burlap'],
      ['hood', 100_000, 9, 'in cabinet',  4, 'quilted cloth hood', 1, 1, 'heavy burlap'],
      ['gloves', 60_000, 4, 'in cabinet', 4, 'quilted cloth gloves', 1, 1, 'heavy burlap'],
      ['shirt', 220_000, 34, 'in cabinet', 4, 'quilted cloth shirt', 0, 2, 'heavy burlap'],
      ['pants', 120_000, 10, 'in cabinet', 4, 'quilted cloth pants', 1, 1, 'heavy burlap'],
      ['backpack', 100_000, 5, 'on table', 3, 'backpack', 'heavy linen'],
      ['bag', 100_000, 6, 'on table', 3, 'duffel bag', 'heavy linen'],
      ['sealed', 220_000, 8, 'in cabinet', 'gryphon'],
      ['sword', 140_000, 9, 'on rack', 'bastard sword', 'steel'],
      ['spear', 120_000, 7, 'on rack', 'light metal spear', 'steel'],
      ['mace', 140_000, 12, 'on rack', 'bar mace', 'steel'],
      ['cutlass', 120_000, 7, 'on rack', 'cutlass', 'steel'],
      ['bola', 120_000, 5, 'on rack', 'bola', 'steel'],
      ['hammer', 120_000, 10, 'on rack', 'throwing hammer', 'steel'],
      ['akabo', 120_000, 13, 'on rack', 'akabo', 'steel'],
      ['spike', 100_000, 4, 'on rack', 'throwing spike', 'steel'],
      ['nightstick', 120_000, 7, 'on rack', 'nightstick', 'steel'],
      ['greataxe', 120_000, 12, 'on rack', 'greataxe', 'steel'],
      ['carryall', 200_000, 5, 'on table', 3, 'carryall', 'heavy silk'],
      ['haversack', 200_000, 6, 'on table', 3, 'haversack', 'heavy silk']
    ]

    walk_to(@shop_id)
    fput('open entrance')
    pause 0.5
    fput('go entrance')

    check_surfaces

    return if Room.current.id == @inner_id
    walk_to(@shop_id)
    fput('open entrance')
    pause 0.5
    fput('go entrance')
  end

  def check_surfaces
    missing_items = []
    @item_list.map { |x| x[3] }.uniq.each do |surface|
      raw_list = bput("look #{surface}", "There's nothing", 'you see [^\.]*')
      raw_list = if raw_list == "There's nothing"
                   []
                 else
                   list_to_nouns(raw_list)
                 end
      missing_items += @item_list.select { |data| surface == data[3] }.reject { |data| raw_list.include?(data.first) }
    end
    restock_surfaces(missing_items)
  end

  def restock_surfaces(missing_items)
    echo missing_items
    restock_steel(missing_items.select { |x| x.last == 'steel' })
    restock_burlap(missing_items.select { |x| x.last == 'heavy burlap' })
    restock_silk(missing_items.select { |x| x.last == 'heavy silk' })
    restock_linen(missing_items.select { |x| x.last == 'heavy linen' })
    restock_gryphon(missing_items.select { |x| x.last == 'gryphon' })
  end

  def restock_steel(missing_items)
    return if missing_items.empty?
    echo missing_items
    volume = ((missing_items.map { |x| x[2] }.inject(&:+) * 1.25) / 10.0).ceil
    wait_for_script_to_complete('makesteel', [volume, 'refine'])

    missing_items.each do |item|
      wait_for_script_to_complete('smith', ['steel', item[4], 'stamp', 'temper'])
      walk_to(@shop_id)
      fput('open entrance')
      pause 0.5
      fput('go entrance')
      fput("sell my #{item.first} #{item[3]} for #{item[1]}")
    end

    wait_for_script_to_complete('workorders', %w[blacksmithing repair])
    walk_to(8774)
    fput('get my steel ingot')
    fput('put ingot in bucket')
  end

  def restock_burlap(missing_items)
    return if missing_items.empty?
    echo missing_items

    volume = missing_items.map { |x| x[2] }.inject(&:+)

    have = 0
    if bput('get burlap cloth', 'You get', 'What were') == 'You get'
      res = bput('count my cloth', 'You count out .*')
      have = res.scan(/\d+/).first.to_i
      stow_hands
    end

    if have < volume
      multiples = ((volume - have) / 16.0).ceil
      multiples.times do
        wait_for_script_to_complete('spin', ['burlap'])
        wait_for_script_to_complete('spin', ['burlap'])
        wait_for_script_to_complete('weave-cloth')
      end
    end

    while bput('get burlap cloth from back', 'You get', 'What were') == 'You get'
      fput('combine cloth')
    end
    stow_hands

    missing_items.each do |item|
      move('out') if Room.current.id == @inner_id

      item[6].times do
        order_item(16_667, 11)
        fput('stow padding')
      end
      item[7].times do
        order_item(16_667, 12)
        fput('stow padding')
      end

      wait_for_script_to_complete('sew', ['stow', 'sewing', item[4], item[5], item[0], 'burlap'])

      fput("get #{item[0]} from back")
      fput('get my stamp')
      fput("mark my #{item[0]} with my stamp")
      waitrt?
      pause
      fput('stow stamp')
      wait_for_script_to_complete('sew', ['reinforce'])
      fput("stow #{item[0]}")
      walk_to(@shop_id)
      fput('open entrance')
      pause 0.5
      fput('go entrance')
      fput("get #{item[0]} from back")
      fput("sell my #{item.first} #{item[3]} for #{item[1]}")
    end
    wait_for_script_to_complete('workorders', %w[tailoring repair])
  end

  def restock_linen(missing_items)
    return if missing_items.empty?
    echo missing_items

    volume = missing_items.map { |x| x[2] }.inject(&:+)

    have = 0
    if bput('get linen cloth', 'You get', 'What were') == 'You get'
      res = bput('count my cloth', 'You count out .*')
      have = res.scan(/\d+/).first.to_i
      stow_hands
    end

    if have < volume
      multiples = ((volume - have) / 16.0).ceil
      multiples.times do
        wait_for_script_to_complete('spin', ['linen'])
        wait_for_script_to_complete('spin', ['linen'])
        wait_for_script_to_complete('weave-cloth')
      end
    end

    while bput('get linen cloth from back', 'You get', 'What were') == 'You get'
      fput('combine cloth')
    end
    stow_hands

    missing_items.each do |item|
      move('out') if Room.current.id == @inner_id
      wait_for_script_to_complete('sew', ['stow', 'sewing', item[4], item[5], item[0], 'linen'])
      walk_to(@shop_id)
      fput('open entrance')
      pause 0.5
      fput('go entrance')
      fput("get #{item[0]} from back")
      fput('get my stamp')
      fput("mark my #{item[0]} with my stamp")
      waitrt?
      pause
      fput('stow stamp')
      fput("sell my #{item.first} #{item[3]} for #{item[1]}")
    end
  end

  def restock_silk(missing_items)
    return if missing_items.empty?
    echo missing_items

    volume = missing_items.map { |x| x[2] }.inject(&:+)

    have = 0
    if bput('get silk cloth from my back', 'You get', 'What were') == 'You get'
      res = bput('count my cloth', 'You count out .*')
      have = res.scan(/\d+/).first.to_i
      stow_hands
    end

    if have < volume
      multiples = ((volume - have) / 16.0).ceil
      multiples.times do
        wait_for_script_to_complete('spin', ['silk'])
        wait_for_script_to_complete('spin', ['silk'])
        wait_for_script_to_complete('weave-cloth')
      end
    end

    while bput('get silk cloth from my back', 'You get', 'What were') == 'You get'
      fput('combine cloth')
    end
    stow_hands

    missing_items.each do |item|
      move('out') if Room.current.id == @inner_id
      wait_for_script_to_complete('sew', ['stow', 'sewing', item[4], item[5], item[0]])
      walk_to(@shop_id)
      fput('open entrance')
      pause 0.5
      fput('go entrance')
      fput("get #{item[0]} from back")
      fput('get my stamp')
      fput("mark my #{item[0]} with my stamp")
      waitrt?
      pause
      fput('stow stamp')
      fput("sell my #{item.first} #{item[3]} for #{item[1]}")
    end
  end

  def restock_gryphon(missing_items)
    return if missing_items.empty?
    echo missing_items

    order_item(16_667, 16)
    order_item(16_667, 17)
    stow_hands

    wait_for_script_to_complete('sew', ['stow', 'leather', 10, 'small leather shield', 'shield', 'gryphon'])
    fput('stow leather')
    fput('get shield from my back')
    wait_for_script_to_complete('sew', ['seal'])
    walk_to(@shop_id)
    fput('open entrance')
    pause 0.5
    fput('go entrance')
    fput('get my stamp')
    fput('mark my shield with my stamp')
    waitrt?
    pause
    fput('stow stamp')
    fput('sell my shield in cabinet for 220000')
  end
end

ShopRestock.new
