=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#appraisal
=end

custom_require.call(%w[common common-travel drinfomon equipmanager])

class Appraisal
  include DRC
  include DRCT

  def initialize
    @equipment_manager = EquipmentManager.new
    settings = get_settings
    train_list = settings.appraisal_training

    train_list.each do |task|
      break if DRSkill.getxp('Appraisal') >= 30
      case task
      when 'zills'
        assess_zills
      when 'pouches'
        train_appraisal_with_pouches(settings.full_pouch_container, settings.gem_pouch_adjective)
      when 'gear'
        train_appraisal_with_gear
      when 'bundle'
        train_appraisal_with_bundle
      when 'art'
        train_appraisal_with_art
      else
        echo "#{task} is not a valid appraisal_training setting"
      end
    end
  end

  def train_appraisal_with_art
    wait_for_script_to_complete('study-art', ['appraisal'])
  end

  def train_appraisal_with_gear
    @equipment_manager.wear_equipment_set?('standard')
    @equipment_manager.items.each { |item| break unless appraise_item?(item) }
  end

  def train_appraisal_with_bundle
    bput('appraise my bundle quick', 'Roundtime', 'Appraise what', 'You cannot appraise')
    waitrt?
  end

  def train_appraisal_with_pouches(full_pouch_container, gem_pouch_adjective)
    bput("appraise my #{gem_pouch_adjective} pouch quick", 'Roundtime', 'You can.t appraise the', 'Appraise what') if gem_pouch_adjective
    $ORDINALS.each do |ordinal|
      case bput("get #{ordinal} pouch from my #{full_pouch_container}", '^You get ', '^What were you referring')
      when /^You get /
        bput('appraise my pouch quick', 'Roundtime')
        waitrt?
        bput("put my pouch in my #{full_pouch_container}", 'You put')
      else
        break
      end

      break if DRSkill.getxp('Appraisal') >= 30
    end
  end

  def appraise_item?(item)
    @equipment_manager.get_item?(item)
    bput("appraise #{item.short_name} quick", 'Roundtime')
    waitrt?
    @equipment_manager.empty_hands
    DRSkill.getxp('Appraisal') < 30
  end

  def assess_zills
    if DRSkill.getrank('Appraisal') >= 250
      echo "Your appraisal skill is above 250. You can remove 'zills' from appraisal_training"
      return
    end

    case bput('remove my zill', 'You slide', 'Remove what')
    when 'Remove what'
      return
    end
    bput('assess my zill', 'you carefully look them over')
    waitrt?
    bput('wear my zill', 'You slide')
  end
end

# Call this last to avoid the need for forward declarations
Appraisal.new
