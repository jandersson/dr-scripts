=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#pilgrimage
=end

custom_require.call(%w[common common-items common-money common-travel drinfomon])

class Pilgrimage
  include DRC
  include DRCI
  include DRCM
  include DRCT

  def initialize
    hometown = get_settings.hometown
    buy_badge(hometown)

    visited = visited_shrines
    unvisited = unvisited_shrines(visited, hometown)

    unvisited.each { |shrine| visit(shrine) }
  end

  def buy_badge(hometown)
    description = 'pilgrim\'s badge'
    return if exists?(description)

    if DRStats.cleric?
      ensure_copper_on_hand(37_500, hometown)
      room = get_data('town')[hometown]['theurgy_supplies']['id']
      walk_to(room)
      move('go storeroom')
      bput("buy #{description}", 'You decide')
      bput("kiss my #{description}", 'making it your own', 'You kiss')
      bput("wear my #{description}", 'You put on')
      move('out')
    else
      echo '***YOU MUST BE A CLERIC TO BUY A PILGRIM\'S BADGE***'
      exit
    end
  end

  def visited_shrines
    fput('look my badge')
    pause
    log = reget(100)
    start_index = log.rindex { |x| x =~ /You have/i } + 1

    log[start_index..-1]
  end

  def unvisited_shrines(visited, hometown)
    hometown_shrines = get_data('shrines')['shrines'][hometown]
    hometown_shrines.reject { |new_shrine| visited.any? { |badge_shrine| badge_shrine =~ /#{new_shrine['location']}/i } }
  end

  def visit(shrine)
    walk_to(shrine['start_room'])
    shrine['path_in'].each { |dir| move(dir) }
    bput('remove my badge', 'You take off')
    bput("push #{shrine['push']} with my badge", 'You press')
    bput('wear my badge', 'You put on')
    shrine['path_out'].each { |dir| move(dir) }
  end
end

# Call this last to avoid the need for forward declarations
Pilgrimage.new
