=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#register

  Search a deed register for the specified crafting material.
  Output all lines that match.
=end

custom_require.call(%w[common common-items])

class Register
  include DRC
  include DRCI

  def initialize
    arg_definitions =
      [
        [
          { name: 'query', regex: /^[A-z0-9\s\-\'\.]+$/i, description: 'crafting material to search for, use quotes for multiple words' }
        ]
      ]
    args = parse_args(arg_definitions)
    container = get_settings.crafting_container

    stow_hands
    unless get_item('deed register', container)
      unless bput('get my deed register', /You get/, /What were you referring to/) == 'You get'
        echo "Can\'t find your deed register."
        exit
      end
    end
    bput('turn my register to contents', 'You flip your deed register to the contents page.', 'But a deed register is already at the table of contents!')
    search(args.query)
    bput("put my register in my #{container}", /You put/, /That.s too heavy to go in there/, /no matter how you arrange/)
    stow_hands
  end

  def display_results(results)
    results.each do |data|
      respond(data)
    end
  end

  def search(query)
    contents = []
    bput('read my register', 'Stored Deeds:')
    pause
    loop do
      line = get?
      if line.match("You haven't stored any deeds in this register.")
        contents << '   There are no deeds in your register.'
        break
      end
      if line.match("You shouldn't read somebody else's deed book.")
        contents << '   This is not your deed register!'
        break
      end
      contents << line if line =~ /\W#{query}\W*/i
      break if line.match('Maximum:  ')
    end

    respond('   ' + 'Results:')
    if contents.any?
      display_results(contents)
    else
      respond('   ' + 'No matches found.')
    end
  end
end

Register.new
